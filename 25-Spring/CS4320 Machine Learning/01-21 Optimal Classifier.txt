Quest for the Optimal Classifier
we often need to classift data into two or more groups based on certain features ("classify")
there are mathematical tools to help us achieve the best possible classification

ex: we want to determine whether or not a mouse is obese based on its mass 
not obese: 11g, 12g, 14g
obese: 18g, 19g, 21g 
we plot these data points on a number line 

what's an optimal threshold?
    the midpoint of max(not_obese) and min(obese)?
    the midpoint of mean(not_obese) and mean(obese)?
    something else?

1D (one-dimensional) case - the MARGIN is the distance between the threshold and the nearest data point from each class.
    we want to maximize the margin while maintaining the threshold between classes.
    for example, a threshold at 16g gives a margin of 2g.
    what if we have an outlier, say a not-obese mouse at 17g?
    do we adjust the threshold to 17.5g?
    no; sometimes we sacrifice outlier data points for the sake of maintaining better thresholds
    not EVERY point matters

2D case - classifying mice by mass AND height 
    obese mice have large mass PROPORTIONAL to their height. 
    in other words, massive mice may still not be obese because they are also tall.
    similarly to 1D, we want to maximize the margin while maintaining a threshold between classes
    we draw two parallel lines to find the "borders" of both classes, and draw the margin exactly between those two lines 

Defining the Margin and Hyperplane
    Hyperplane: a straight line that separates two classes in a 2D plane in 3D space 
    margin: the perpendicular distance from the hyperplane to the support points (the closest points from each class)
    positive and negative gutters: lines praallel to the hyperplane that touch the support points

Let's propose a name for an optimal classification model based on some keywords:
    maximal margin: what we're shooting for 
    hyperplane: what the maximal margin will give us 
    supporting points (supporting vectors if high-dimensional)

the formal name: support vector classifier (or maximal margin classifier)
the key to this model is found in the supporting points 

Finding the Maximal Margin mathematically:
vector w * vector x = ||w|| * ((||x|| * cos(theta)) / C) = -b
H_0: w * x + b = 0
H_1: w * x + b = k
H_2: w * x + b = -k